{"ast":null,"code":"var _jsxFileName = \"/Users/emmasmedley/SEI/Week-9/the-wild-list/src/components/Elephants/ElephantList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { getAllElephants } from \"../../lib/api\";\nimport ElephantCard from \"./ElephantCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ElephantList = () => {\n  _s();\n\n  const [state, setState] = React.useState({\n    elephants: []\n  });\n\n  const fetchAllElephantsFromApi = async () => {\n    try {\n      const response = await getAllElephants();\n      setState({\n        elephants: response.data\n      });\n    } catch (error) {\n      console.error(\"error occured fetching all elephants\", error);\n    }\n  };\n\n  React.useEffect(() => {\n    fetchAllElephantsFromApi();\n  }, []);\n  console.log(state);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: state.elephants.map(elephant => /*#__PURE__*/_jsxDEV(ElephantCard, {\n        _id: elephant._id,\n        name: elephant.name,\n        fact: elephant.note,\n        image: elephant.image\n      }, elephant._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ElephantList, \"LCxmBVkeo+0YqRgpMOmkdpcaACA=\");\n\n_c = ElephantList;\nexport default ElephantList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ElephantList\");","map":{"version":3,"sources":["/Users/emmasmedley/SEI/Week-9/the-wild-list/src/components/Elephants/ElephantList.js"],"names":["React","getAllElephants","ElephantCard","ElephantList","state","setState","useState","elephants","fetchAllElephantsFromApi","response","data","error","console","useEffect","log","map","elephant","_id","name","note","image"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAAe;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAAf,CAA1B;;AAEA,QAAMC,wBAAwB,GAAG,YAAY;AAC3C,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMR,eAAe,EAAtC;AACAI,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,SAAS,EAAEE,QAAQ,CAACC;AAAtB,OAAD,CAAR;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,sCAAd,EAAsDA,KAAtD;AACD;AACF,GAPD;;AASAX,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpBL,IAAAA,wBAAwB;AACzB,GAFD,EAEG,EAFH;AAIAI,EAAAA,OAAO,CAACE,GAAR,CAAYV,KAAZ;AAEA,sBACE;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACGA,KAAK,CAACG,SAAN,CAAgBQ,GAAhB,CAAqBC,QAAD,iBACnB,QAAC,YAAD;AAEE,QAAA,GAAG,EAAEA,QAAQ,CAACC,GAFhB;AAGE,QAAA,IAAI,EAAED,QAAQ,CAACE,IAHjB;AAIE,QAAA,IAAI,EAAEF,QAAQ,CAACG,IAJjB;AAKE,QAAA,KAAK,EAAEH,QAAQ,CAACI;AALlB,SACOJ,QAAQ,CAACC,GADhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAjCD;;GAAMd,Y;;KAAAA,Y;AAmCN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport { getAllElephants } from \"../../lib/api\";\nimport ElephantCard from \"./ElephantCard\";\n\nconst ElephantList = () => {\n  const [state, setState] = React.useState({ elephants: [] });\n\n  const fetchAllElephantsFromApi = async () => {\n    try {\n      const response = await getAllElephants();\n      setState({ elephants: response.data });\n    } catch (error) {\n      console.error(\"error occured fetching all elephants\", error);\n    }\n  };\n\n  React.useEffect(() => {\n    fetchAllElephantsFromApi();\n  }, []);\n\n  console.log(state);\n\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        {state.elephants.map((elephant) => (\n          <ElephantCard\n            key={elephant._id}\n            _id={elephant._id}\n            name={elephant.name}\n            fact={elephant.note}\n            image={elephant.image}\n          />\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default ElephantList;\n"]},"metadata":{},"sourceType":"module"}