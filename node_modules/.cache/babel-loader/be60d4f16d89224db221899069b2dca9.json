{"ast":null,"code":"var _jsxFileName = \"/Users/antony/SEI/projects/the-wild-list/src/components/Animales/AnimalList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { getAllElephants } from \"../../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnimalList = () => {\n  _s();\n\n  // const [state, setState] = React.useState({ animals: [] });\n  // const [regionState, setRegionState] = React.useState({ regions: [] });\n  const [elephantState, setElephantState] = React.useState({\n    elephants: []\n  }); // const fetchAnimalsFromApi = async () => {\n  //   try {\n  //     const res = await getAllAnimals();\n  //     setState({ animals: res.data });\n  //   } catch (err) {\n  //     console.error(\"An error occured fetching all animals\", err);\n  //   }\n  // };\n  // const fetchAnimalRegionsFromApi = async () => {\n  //   try {\n  //     const response = await getAllRegions();\n  //     setRegionState({ regions: response.data });\n  //   } catch (error) {\n  //     console.error(\"Error occured fetching all regions\", error);\n  //   }\n  // };\n\n  const fetchAllElephantsFromApi = async () => {\n    try {\n      const response = await getAllElephants();\n      setElephantState({\n        elephants: response.data\n      });\n    } catch (error) {\n      console.error(\"error occured fetching all elephants\", error);\n    }\n  };\n\n  React.useEffect(() => {\n    // fetchAnimalsFromApi();\n    fetchAnimalRegionsFromApi();\n  }, []); // console.log(state);\n\n  console.log(regionState);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Some Text\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AnimalList, \"Mzab7meGM6pU3nfCRDs7WlrPPeA=\");\n\n_c = AnimalList;\nexport default AnimalList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimalList\");","map":{"version":3,"sources":["/Users/antony/SEI/projects/the-wild-list/src/components/Animales/AnimalList.js"],"names":["React","getAllElephants","AnimalList","elephantState","setElephantState","useState","elephants","fetchAllElephantsFromApi","response","data","error","console","useEffect","fetchAnimalRegionsFromApi","log","regionState"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,eAAhC;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB;AACA;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCJ,KAAK,CAACK,QAAN,CAAe;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAAf,CAA1C,CAHuB,CAKvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,wBAAwB,GAAG,YAAY;AAC3C,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMP,eAAe,EAAtC;AACAG,MAAAA,gBAAgB,CAAC;AAAEE,QAAAA,SAAS,EAAEE,QAAQ,CAACC;AAAtB,OAAD,CAAhB;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,sCAAd,EAAsDA,KAAtD;AACD;AACF,GAPD;;AASAV,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpB;AACAC,IAAAA,yBAAyB;AAC1B,GAHD,EAGG,EAHH,EAhCuB,CAqCvB;;AACAF,EAAAA,OAAO,CAACG,GAAR,CAAYC,WAAZ;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAzCD;;GAAMb,U;;KAAAA,U;AA2CN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { getAllElephants } from \"../../lib/api\";\n\nconst AnimalList = () => {\n  // const [state, setState] = React.useState({ animals: [] });\n  // const [regionState, setRegionState] = React.useState({ regions: [] });\n  const [elephantState, setElephantState] = React.useState({ elephants: [] });\n\n  // const fetchAnimalsFromApi = async () => {\n  //   try {\n  //     const res = await getAllAnimals();\n  //     setState({ animals: res.data });\n  //   } catch (err) {\n  //     console.error(\"An error occured fetching all animals\", err);\n  //   }\n  // };\n\n  // const fetchAnimalRegionsFromApi = async () => {\n  //   try {\n  //     const response = await getAllRegions();\n  //     setRegionState({ regions: response.data });\n  //   } catch (error) {\n  //     console.error(\"Error occured fetching all regions\", error);\n  //   }\n  // };\n\n  const fetchAllElephantsFromApi = async () => {\n    try {\n      const response = await getAllElephants();\n      setElephantState({ elephants: response.data });\n    } catch (error) {\n      console.error(\"error occured fetching all elephants\", error);\n    }\n  };\n\n  React.useEffect(() => {\n    // fetchAnimalsFromApi();\n    fetchAnimalRegionsFromApi();\n  }, []);\n\n  // console.log(state);\n  console.log(regionState);\n\n  return <p>Some Text</p>;\n};\n\nexport default AnimalList;\n"]},"metadata":{},"sourceType":"module"}